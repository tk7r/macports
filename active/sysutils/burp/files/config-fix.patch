diff -urN burp-1.4.40.orig/Makefile.in burp-1.4.40/Makefile.in
--- burp-1.4.40.orig/Makefile.in	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/Makefile.in	2015-12-15 15:08:59.000000000 +0100
@@ -1,4 +1,4 @@
-# 
+#
 # Version $Id: Makefile.in 8835 2009-05-16 14:25:36Z kerns $
 # Master Makefile
 #
@@ -46,8 +46,8 @@
 depend:
 	@for I in ${all_subdirs}; \
 	  do (cd $$I; echo "==>Entering directory `pwd`"; $(MAKE) DESTDIR=$(DESTDIR) $@ || exit 1); done
-	
-burp: Makefile	   
+
+burp: Makefile
 	@for I in ${fd_subdirs}; \
 	  do (cd $$I; echo "==>Entering directory `pwd`"; \
 	      $(MAKE) all || (echo ""; echo ""; echo "	 ====== Error in `pwd` ======; \
@@ -91,7 +91,7 @@
 	$(MKDIR) $(DESTDIR)$(sysconfdir)
 	$(MKDIR) $(DESTDIR)$(sysconfdir)/CA-client
 	$(MKDIR) $(DESTDIR)/var/run
-	$(MKDIR) $(DESTDIR)/var/spool/burp
+	$(MKDIR) $(DESTDIR)/var/burp
 	@if [ ! -d $(DESTDIR)$(sysconfdir)/clientconfdir ] ; then $(MKDIR) $(DESTDIR)$(sysconfdir)/clientconfdir ; cp configs/server/clientconfdir/testclient $(DESTDIR)$(sysconfdir)/clientconfdir/testclient ; fi
 	@if [ ! -d $(DESTDIR)$(sysconfdir)/clientconfdir/incexc ] ; then $(MKDIR) $(DESTDIR)$(sysconfdir)/clientconfdir/incexc ; cp configs/server/clientconfdir/incexc $(DESTDIR)$(sysconfdir)/clientconfdir/incexc/example ; fi
 	@if [ ! -d $(DESTDIR)$(sysconfdir)/autoupgrade/client ] ; then $(MKDIR) $(DESTDIR)$(sysconfdir)/autoupgrade/client ; fi
diff -urN burp-1.4.40.orig/README burp-1.4.40/README
--- burp-1.4.40.orig/README	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/README	2015-12-15 13:57:55.000000000 +0100
@@ -8,15 +8,15 @@
 
 You need to compile burp on a unix-based operating system first. Make sure that
 you have openssl, zlib, librsync and uthash libraries and development libraries
-installed. 
+installed.
 
 Debian/Ubuntu dependencies:
-   
+
     With debian or ubuntu, this command should install them for you:
     apt-get install librsync-dev libz-dev libssl-dev uthash-dev
 
 RHEL/CentOS dependencies:
-	
+
     On RHEL, you need to install these crucial packages:
     yum install zlib-devel openssl-devel ncurses-devel libacl-devel openssl-perl
 
@@ -33,7 +33,7 @@
 UNIX SERVER
 -----------
 
-Start the burp server with this command: burp -c /etc/burp/burp-server.conf
+Start the burp server with this command: burp -c @PREFIX@/etc/burp/burp-server.conf
 
 By default, the server will fork into the background and run as a daemon. To
 stay in the foreground, add the '-F' option. The first time that the server
@@ -48,7 +48,7 @@
 ------------------------
 
 Each client is represented by a file in the server directory
-'/etc/burp/clientconfdir'.
+'@PREFIX@/etc/burp/clientconfdir'.
 The client name is the same as the file name, and the file contains a field
 called 'password'.
 Clients have a 'burp.conf' configuration file.
@@ -67,7 +67,7 @@
 For the Windows client, you can either use 'testclient' or create a new
 clientconfdir file. It is normally easiest to do something like this on the
 server:
-cd /etc/burp/clientconfdir
+cd @PREFIX@/etc/burp/clientconfdir
 cp testclient windowsclient
 
 
@@ -81,7 +81,7 @@
 the 'configure/make/make install' sequence on the client machine, or get burp
 via your distribution's package manager.
 
-The example client configuration file is /etc/burp/burp.conf.
+The example client configuration file is @PREFIX@/etc/burp/burp.conf.
 It will backup /home by default.
 
 You can either force a backup by hand:
@@ -111,7 +111,7 @@
 
 The Windows installer will ask you for the address of your server, the client
 name, and the client password. Make sure that a matching file exists in
-/etc/burp/clientconfdir on the server.
+@PREFIX@/etc/burp/clientconfdir on the server.
 
 Burp will then install its files to: C:/Program Files/Burp
 (Note that the "C:/Program Files/" part may differ, depending on Windows'
diff -urN burp-1.4.40.orig/configs/certs/CA/CA.cnf burp-1.4.40/configs/certs/CA/CA.cnf
--- burp-1.4.40.orig/configs/certs/CA/CA.cnf	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/configs/certs/CA/CA.cnf	2015-12-15 13:57:19.000000000 +0100
@@ -1,7 +1,7 @@
 # simple config for burp_ca
 
 RANDFILE                = /dev/urandom
-CA_DIR                  = /etc/burp/CA
+CA_DIR                  = @PREFIX@/etc/burp/CA
 
 
 [ ca ]
diff -urN burp-1.4.40.orig/configs/certs/CA/README burp-1.4.40/configs/certs/CA/README
--- burp-1.4.40.orig/configs/certs/CA/README	2015-05-12 12:52:36.000000000 +0200
+++ burp-1.4.40/configs/certs/CA/README	2015-12-15 13:57:09.000000000 +0100
@@ -10,7 +10,7 @@
 
 
 I wrote a 'burp_ca' for testing. It should be installed to /usr/sbin.
-CA.cnf goes to /etc/burp/.
+CA.cnf goes to @PREFIX@/etc/burp/.
 
 I think it would be better not to install any certificates. Maybe
 you can add a 'make install; make demo_certs'.
@@ -28,7 +28,7 @@
 
  # generate key and csr
  burp_ca --key --request --dir . --name `hostname -f`
- # copy *.csr to the server to /etc/burp/CA (or whatever --dir ...)
+ # copy *.csr to the server to @PREFIX@/etc/burp/CA (or whatever --dir ...)
  # on the server:
  burp_ca --ca `hostname -f` --sign --name <clienthostname>
  # copy CA/<clienthostname>.crt back to the client
@@ -43,7 +43,7 @@
 > What I'm doing may not be quite right, but it has been working so far and
 > nobody has complained yet!
 > So these two new ones can probably just be added around line 113.
-	
+
  * Default certs needs to be removed and replaced by symlinks to generated
    certificates (so you don't have to change the configs).
 
diff -urN burp-1.4.40.orig/configs/certs/CA/burp_ca burp-1.4.40/configs/certs/CA/burp_ca
--- burp-1.4.40.orig/configs/certs/CA/burp_ca	2015-05-30 01:33:04.000000000 +0200
+++ burp-1.4.40/configs/certs/CA/burp_ca	2015-12-15 13:53:43.000000000 +0100
@@ -7,7 +7,7 @@
 
 set -e
 
-etc=/etc/burp
+etc=@PREFIX@/etc/burp
 dir=${etc}/CA
 conf=${etc}/CA.cnf
 
@@ -104,7 +104,7 @@
   if [ -d ${dir} ]; then
      echo "$0: error - ${dir} exists, ca initialized" 1>&2; exit 1
   fi
-  
+
   mkdir ${dir}
   mkdir ${dir}/certs
   mkdir ${dir}/newcerts
@@ -148,7 +148,7 @@
   umask ${def_umask}
 fi
 
-# generate signing request 
+# generate signing request
 [ -z "$requestpath" ] && requestpath=${dir}/${name}.csr
 if [ "$request" = "yes" ]; then
   echo "generating request ${name}"
@@ -175,7 +175,7 @@
 fi
 
 
-# sign 
+# sign
 if [ "$sign" = "yes" ]; then
   serial=$(cat ${dir}/serial.txt)
   CA_DIR=${dir} openssl ca -config ${conf} -name ca \
@@ -202,7 +202,7 @@
 if [ -n "$crl" ]; then
   CA_DIR=${dir} openssl ca -config ${conf} -name ca \
    -gencrl -out ${dir}/CA_${ca}.crl \
-   -keyfile ${dir}/CA_${ca}.key -cert ${dir}/CA_${ca}.crt 
+   -keyfile ${dir}/CA_${ca}.key -cert ${dir}/CA_${ca}.crt
 fi
 
 exit 0
diff -urN burp-1.4.40.orig/configs/client/burp.conf burp-1.4.40/configs/client/burp.conf
--- burp-1.4.40.orig/configs/client/burp.conf	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/configs/client/burp.conf	2015-12-15 15:04:30.000000000 +0100
@@ -5,7 +5,7 @@
 server = 127.0.0.1
 password = abcdefgh
 cname = testclient
-pidfile = /var/run/burp.client.pid
+pidfile = @PREFIX@/var/run/burp.client.pid
 syslog = 0
 stdout = 1
 progress_counter = 1
@@ -15,7 +15,7 @@
 # network_timeout = 7200
 # The directory to which autoupgrade files will be downloaded.
 # To never autoupgrade, leave it commented out.
-# autoupgrade_dir=/etc/burp/autoupgrade/client
+# autoupgrade_dir=@PREFIX@/etc/burp/autoupgrade/client
 # OS path component for the autoupgrade directory on the server.
 # autoupgrade_os=test_os
 
@@ -41,20 +41,20 @@
 
 # Uncomment the following lines to automatically generate a certificate signing
 # request and send it to the server.
-ca_burp_ca = /usr/sbin/burp_ca
-ca_csr_dir = /etc/burp/CA-client
+ca_burp_ca = @PREFIX@/sbin/burp_ca
+ca_csr_dir = @PREFIX@/etc/burp/CA-client
 
 # SSL certificate authority - same file on both server and client
-ssl_cert_ca = /etc/burp/ssl_cert_ca.pem
+ssl_cert_ca = @PREFIX@/etc/burp/ssl_cert_ca.pem
 
 # Client SSL certificate
-ssl_cert = /etc/burp/ssl_cert-client.pem
+ssl_cert = @PREFIX@/etc/burp/ssl_cert-client.pem
 
 # Client SSL key
-ssl_key = /etc/burp/ssl_cert-client.key
+ssl_key = @PREFIX@/etc/burp/ssl_cert-client.key
 
 # Client SSL ciphers
-#ssl_ciphers = 
+#ssl_ciphers =
 
 # SSL key password
 ssl_key_password = password
diff -urN burp-1.4.40.orig/configs/server/burp.conf burp-1.4.40/configs/server/burp.conf
--- burp-1.4.40.orig/configs/server/burp.conf	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/configs/server/burp.conf	2015-12-15 15:52:21.000000000 +0100
@@ -3,9 +3,9 @@
 mode = server
 port = 4971
 status_port = 4972
-directory = /var/spool/burp
-clientconfdir = /etc/burp/clientconfdir
-pidfile = /var/run/burp.server.pid
+directory = @PREFIX@/var/burp
+clientconfdir = @PREFIX@/etc/burp/clientconfdir
+pidfile = @PREFIX@/var/run/burp.server.pid
 hardlinked_archive = 0
 working_dir_recovery_method = delete
 max_children = 5
@@ -39,7 +39,7 @@
 
 # Location of autoupgrade files to serve to clients. Leave it commented out
 # to not autoupgrade clients.
-# autoupgrade_dir = /etc/burp/autoupgrade/server
+# autoupgrade_dir = @PREFIX@/etc/burp/autoupgrade/server
 
 # You can have as many 'keep' lines as you like.
 # For example, if running backups daily, setting 7, 4, 6 will keep
@@ -58,30 +58,30 @@
 # ca_conf does not exist, the server will create, populate it, and the paths
 # indicated by ssl_cert_ca, ssl_cert, ssl_key and ssl_dhfile below will be
 # overwritten. See docs/burp_ca.txt for more information.
-ca_conf = /etc/burp/CA.cnf
+ca_conf = @PREFIX@/etc/burp/CA.cnf
 ca_name = burpCA
 ca_server_name = burpserver
-ca_burp_ca = /usr/sbin/burp_ca
+ca_burp_ca = @PREFIX@/sbin/burp_ca
 
 # SSL certificate authority - same file on both server and client
-ssl_cert_ca = /etc/burp/ssl_cert_ca.pem
+ssl_cert_ca = @PREFIX@/etc/burp/ssl_cert_ca.pem
 
 # Server SSL certificate
-ssl_cert = /etc/burp/ssl_cert-server.pem
+ssl_cert = @PREFIX@/etc/burp/ssl_cert-server.pem
 
 # Server SSL key
-ssl_key = /etc/burp/ssl_cert-server.key
+ssl_key = @PREFIX@/etc/burp/ssl_cert-server.key
 
 # Server SSL ciphers
-#ssl_ciphers = 
+#ssl_ciphers =
 
 # SSL key password
 ssl_key_password = password
 
 # Server DH file.
-ssl_dhfile = /etc/burp/dhfile.pem
+ssl_dhfile = @PREFIX@/etc/burp/dhfile.pem
 
-timer_script = /etc/burp/timer_script
+timer_script = @PREFIX@/etc/burp/timer_script
 # Ensure that 20 hours elapse between backups
 # Available units:
 # s (seconds), m (minutes), h (hours), d (days), w (weeks), n (months)
@@ -99,7 +99,7 @@
 # %b - "backup"/"restore"/"verify"
 # %c - client name
 # %w - number of warnings, if any
-#notify_success_script = /etc/burp/notify_script
+#notify_success_script = @PREFIX@/etc/burp/notify_script
 #notify_success_arg = sendmail -t
 #notify_success_arg = To: youremail@example.com
 #notify_success_arg = From: burp
@@ -112,7 +112,7 @@
 #notify_success_changes_only = 1
 
 # Uncomment the following for email notifications of backups that failed.
-#notify_failure_script = /etc/burp/notify_script
+#notify_failure_script = @PREFIX@/etc/burp/notify_script
 #notify_failure_arg = sendmail -t
 #notify_failure_arg = To: youremail@example.com
 #notify_failure_arg = From: burp
@@ -120,18 +120,18 @@
 
 # The server can run scripts on each connection after authentication and before
 # disconnecting.
-#server_script_pre = /etc/burp/ssl_extra_checks_script
-#server_script_pre_arg = /etc/burp/crl
-#server_script_pre_arg = /etc/burp/burp-server.conf
-#server_script_pre_arg = /etc/burp/server-pre-script.local
+#server_script_pre = @PREFIX@/etc/burp/ssl_extra_checks_script
+#server_script_pre_arg = @PREFIX@/etc/burp/crl
+#server_script_pre_arg = @PREFIX@/etc/burp/burp-server.conf
+#server_script_pre_arg = @PREFIX@/etc/burp/server-pre-script.local
 # Set server_script_pre_notify to 1 to have notifications on server_script_pre
 # returning non-zero. Most people will want to leave this off - it could
 # result in a lot of emails because clients normally connect once every 20
 # minutes. Requires notify_failure_script to be set above.
 #server_script_pre_notify = 0
-#server_script_post = 
-#server_script_post_arg = 
-#server_script_post_arg = 
+#server_script_post =
+#server_script_post_arg =
+#server_script_post_arg =
 #server_script_post_run_on_fail=0
 # As for server_script_pre_notify, but for post.
 #server_script_post_notify = 0
diff -urN burp-1.4.40.orig/configs/server/offsite-backup burp-1.4.40/configs/server/offsite-backup
--- burp-1.4.40.orig/configs/server/offsite-backup	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/configs/server/offsite-backup	2015-12-15 13:56:36.000000000 +0100
@@ -17,7 +17,7 @@
 # This script demonstrates how to run efficient offsite rsyncs using the burp
 # server side post script mechanism.
 # You need to place something like this in the server config file:
-# server_script_post = /etc/burp/offsite-backup
+# server_script_post = @PREFIX@/etc/burp/offsite-backup
 # server_script_post_run_on_fail = 0
 # This can be given globally, or differently for individual clients.
 
diff -urN burp-1.4.40.orig/manpages/bedup.8 burp-1.4.40/manpages/bedup.8
--- burp-1.4.40.orig/manpages/bedup.8	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/manpages/bedup.8	2015-12-15 13:53:30.000000000 +0100
@@ -16,7 +16,7 @@
 .SH OPTIONS
 .TP
 \fB\-c\fR \fBpath\fR
-Path to config file (default: /etc/burp/burp.conf).
+Path to config file (default: @PREFIX@/etc/burp/burp.conf).
 .TP
 \fB\-g\fR \fB<list of group names>\fR
 Only run on the directories of clients that are in one of the groups specified. The list is comma-separated. To put a client in a group, use the 'dedup_group' option in the client configuration file on the server.
@@ -42,7 +42,7 @@
 \fB\-V\fR \fB\fR
 Print version and exit.\fR
 .TP
-By default, bedup will read /etc/burp/burp.conf and deduplicate client storage directories using special knowledge of the structure.\fR
+By default, bedup will read @PREFIX@/etc/burp/burp.conf and deduplicate client storage directories using special knowledge of the structure.\fR
 .TP
 With '\-n', this knowledge is turned off and you have to specify the directories to deduplicate on the command line. Running with '\-n' is therefore dangerous if you are deduplicating burp storage directories.
 
diff -urN burp-1.4.40.orig/manpages/burp.8 burp-1.4.40/manpages/burp.8
--- burp-1.4.40.orig/manpages/burp.8	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/manpages/burp.8	2015-12-15 13:54:16.000000000 +0100
@@ -17,7 +17,7 @@
 .TP
 \fB\-c\fR \fB[path]\fR
 Short for 'config file'. The argument is a path to the config file. The default
-is /etc/burp/burp.conf.
+is @PREFIX@/etc/burp/burp.conf.
 .TP
 \fB\-n\fR \fB\fR
 No forking mode. The program will accept a single query, deal with it, and then
@@ -66,7 +66,7 @@
 .TP
 \fB\-c\fR \fB[path]\fR
 Short for 'config file'. The argument is a path to the config file. The default
-is /etc/burp/burp.conf, or %PROGRAMFILES%\\Burp\\burp.conf on Windows.
+is @PREFIX@/etc/burp/burp.conf, or %PROGRAMFILES%\\Burp\\burp.conf on Windows.
 .TP
 \fB\-C\fR \fB[client]\fR
 Allows you to specify an alternative client to list or restore from. Requires that the server configuration of the alternative client permits your client to do this. See the 'restore_client' option.
@@ -373,7 +373,7 @@
 Path to autoupgrade directory from which upgrades are downloaded. The option can be left unset in order not to autoupgrade clients. Please see docs/autoupgrade.txt in the source package for more help with this option.
 .TP
 \fBca_conf=[path]\fR
-Path to certificate authority configuration file. The CA configuration file will usually be /etc/burp/CA.cnf. The CA directory indicated by CA.cnf will usually be /etc/burp/CA. If ca_conf is set and the CA directory does not exist, the server will create, populate it, and the paths indicated by ssl_cert_ca, ssl_cert, ssl_key and ssl_dhfile will be overwritten. For more detailed information on this and the other ca_* options, please see docs/burp_ca.txt.
+Path to certificate authority configuration file. The CA configuration file will usually be @PREFIX@/etc/burp/CA.cnf. The CA directory indicated by CA.cnf will usually be @PREFIX@/etc/burp/CA. If ca_conf is set and the CA directory does not exist, the server will create, populate it, and the paths indicated by ssl_cert_ca, ssl_cert, ssl_key and ssl_dhfile will be overwritten. For more detailed information on this and the other ca_* options, please see docs/burp_ca.txt.
 .TP
 \fBca_name=[name]\fR
 Name of the CA that the server will generate when using the ca_conf option.
diff -urN burp-1.4.40.orig/manpages/burp_ca.8 burp-1.4.40/manpages/burp_ca.8
--- burp-1.4.40.orig/manpages/burp_ca.8	2015-07-01 13:45:08.000000000 +0200
+++ burp-1.4.40/manpages/burp_ca.8	2015-12-15 13:53:12.000000000 +0100
@@ -38,10 +38,10 @@
 generate certificate revoke list
 .TP
 \fB\-d|\-\-dir\fR \fB<dir>\fR
-ca output dir (default: /etc/burp/CA)
+ca output dir (default: @PREFIX@/etc/burp/CA)
 .TP
 \fB\-c|\-\-config\fR \fB\fR
-config file (default: /etc/burp/CA.cnf)
+config file (default: @PREFIX@/etc/burp/CA.cnf)
 .TP
 \fB\-n|\-\-name\fR \fB\fR
 name (default: builder)
